{"version":3,"file":"Combobox.demo.activeOption.js","sources":["../../../../src/demos/core/Combobox/Combobox.demo.activeOption.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { Input, InputBase, Combobox, useCombobox, CheckIcon, Group } from '@mantine/core';\n\nconst code = `\nimport { useState } from 'react';\nimport { Input, InputBase, Combobox, useCombobox, CheckIcon, Group } from '@mantine/core';\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n    onDropdownOpen: (eventSource) => {\n      if (eventSource === 'keyboard') {\n        combobox.selectActiveOption();\n      } else {\n        combobox.updateSelectedOptionIndex('active');\n      }\n    },\n  });\n\n  const [value, setValue] = useState<string | null>('🥦 Broccoli');\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item} active={item === value}>\n      <Group gap=\"xs\">\n        {item === value && <CheckIcon size={12} />}\n        <span>{item}</span>\n      </Group>\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox\n      store={combobox}\n      resetSelectionOnOptionHover\n      onOptionSubmit={(val) => {\n        setValue(val);\n        combobox.updateSelectedOptionIndex('active');\n      }}\n    >\n      <Combobox.Target targetType=\"button\">\n        <InputBase\n          component=\"button\"\n          pointer\n          rightSection={<Combobox.Chevron />}\n          onClick={() => combobox.toggleDropdown()}\n        >\n          {value || <Input.Placeholder>Pick value</Input.Placeholder>}\n        </InputBase>\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>{options}</Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n`;\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n    onDropdownOpen: (eventSource) => {\n      if (eventSource === 'keyboard') {\n        combobox.selectActiveOption();\n      } else {\n        combobox.updateSelectedOptionIndex('active');\n      }\n    },\n  });\n\n  const [value, setValue] = useState<string | null>('🥦 Broccoli');\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item} active={item === value}>\n      <Group gap=\"xs\">\n        {item === value && <CheckIcon size={12} />}\n        <span>{item}</span>\n      </Group>\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox\n      store={combobox}\n      resetSelectionOnOptionHover\n      onOptionSubmit={(val) => {\n        setValue(val);\n        combobox.updateSelectedOptionIndex('active');\n      }}\n    >\n      <Combobox.Target targetType=\"button\">\n        <InputBase\n          component=\"button\"\n          pointer\n          rightSection={<Combobox.Chevron />}\n          onClick={() => combobox.toggleDropdown()}\n        >\n          {value || <Input.Placeholder>Pick value</Input.Placeholder>}\n        </InputBase>\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>{options}</Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n\nexport const activeOption: MantineDemo = {\n  type: 'code',\n  component: Demo,\n  maxWidth: 340,\n  centered: true,\n  defaultExpanded: false,\n  code,\n};\n"],"names":[],"mappings":"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"}
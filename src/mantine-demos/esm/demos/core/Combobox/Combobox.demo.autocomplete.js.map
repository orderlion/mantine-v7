{"version":3,"file":"Combobox.demo.autocomplete.js","sources":["../../../../src/demos/core/Combobox/Combobox.demo.autocomplete.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { Combobox, TextInput, useCombobox } from '@mantine/core';\n\nconst code = `\nimport { useState } from 'react';\nimport { Combobox, TextInput, useCombobox } from '@mantine/core';\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const combobox = useCombobox();\n  const [value, setValue] = useState('');\n  const shouldFilterOptions = !groceries.some((item) => item === value);\n  const filteredOptions = shouldFilterOptions\n    ? groceries.filter((item) => item.toLowerCase().includes(value.toLowerCase().trim()))\n    : groceries;\n\n  const options = filteredOptions.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      {item}\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox\n      onOptionSubmit={(optionValue) => {\n        setValue(optionValue);\n        combobox.closeDropdown();\n      }}\n      store={combobox}\n    >\n      <Combobox.Target>\n        <TextInput\n          label=\"Pick value or type anything\"\n          placeholder=\"Pick value or type anything\"\n          value={value}\n          onChange={(event) => {\n            setValue(event.currentTarget.value);\n            combobox.openDropdown();\n            combobox.updateSelectedOptionIndex();\n          }}\n          onClick={() => combobox.openDropdown()}\n          onFocus={() => combobox.openDropdown()}\n          onBlur={() => combobox.closeDropdown()}\n        />\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>\n          {options.length === 0 ? <Combobox.Empty>Nothing found</Combobox.Empty> : options}\n        </Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n`;\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const combobox = useCombobox();\n  const [value, setValue] = useState('');\n  const shouldFilterOptions = !groceries.some((item) => item === value);\n  const filteredOptions = shouldFilterOptions\n    ? groceries.filter((item) => item.toLowerCase().includes(value.toLowerCase().trim()))\n    : groceries;\n\n  const options = filteredOptions.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      {item}\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox\n      onOptionSubmit={(optionValue) => {\n        setValue(optionValue);\n        combobox.closeDropdown();\n      }}\n      store={combobox}\n    >\n      <Combobox.Target>\n        <TextInput\n          label=\"Pick value or type anything\"\n          placeholder=\"Pick value or type anything\"\n          value={value}\n          onChange={(event) => {\n            setValue(event.currentTarget.value);\n            combobox.openDropdown();\n            combobox.updateSelectedOptionIndex();\n          }}\n          onClick={() => combobox.openDropdown()}\n          onFocus={() => combobox.openDropdown()}\n          onBlur={() => combobox.closeDropdown()}\n        />\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>\n          {options.length === 0 ? <Combobox.Empty>Nothing found</Combobox.Empty> : options}\n        </Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n\nexport const autocomplete: MantineDemo = {\n  type: 'code',\n  component: Demo,\n  centered: true,\n  maxWidth: 340,\n  defaultExpanded: false,\n  code,\n};\n"],"names":[],"mappings":"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"}
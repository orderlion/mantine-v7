{"version":3,"file":"TipTap.demo.codeHighlight.js","sources":["../../../src/demos/tiptap/TipTap.demo.codeHighlight.tsx"],"sourcesContent":["import React from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { RichTextEditor } from '@mantine/tiptap';\nimport { useEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport CodeBlockLowlight from '@tiptap/extension-code-block-lowlight';\nimport { lowlight } from 'lowlight';\nimport tsLanguageSyntax from 'highlight.js/lib/languages/typescript';\n\nconst code = `\nimport { RichTextEditor } from '@mantine/tiptap';\nimport { useEditor } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport CodeBlockLowlight from '@tiptap/extension-code-block-lowlight';\nimport { lowlight } from 'lowlight';\nimport tsLanguageSyntax from 'highlight.js/lib/languages/typescript';\n\n// register languages that your are planning to use\nlowlight.registerLanguage('ts', tsLanguageSyntax);\n\nfunction escapeHtml(unsafe: string) {\n  return unsafe\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\nconst codeExample =\n  escapeHtml(\\`// Valid braces Kata – https://www.codewars.com/kata/5277c8a221e209d3f6000b56\n\nconst pairs: Record<string, string> = {\n  '[': ']',\n  '{': '}',\n  '(': ')',\n};\n\nconst openBraces = Object.keys(pairs);\n\nexport function validBraces(braces: string) {\n  const opened: string[] = [];\n\n  for (let i = 0; i < braces.length; i += 1) {\n    const brace = braces[i];\n\n    if (openBraces.includes(brace)) {\n      opened.push(brace);\n      continue;\n    }\n\n    if (pairs[opened[opened.length - 1]] !== brace) {\n      return false\n    }\n\n    opened.pop();\n  }\n\n  return opened.length === 0;\n}\\`);\n\nfunction Demo() {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      CodeBlockLowlight.configure({\n        lowlight,\n      }),\n    ],\n    content: \\`<p>Regular paragraph</p><pre><code>\\${codeExample}</code></pre>\\`,\n  });\n\n  return (\n    <RichTextEditor editor={editor}>\n      <RichTextEditor.Toolbar>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.CodeBlock />\n        </RichTextEditor.ControlsGroup>\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n}\n`;\n\n// register languages that your are planning to use\nlowlight.registerLanguage('ts', tsLanguageSyntax);\n\nfunction escapeHtml(unsafe: string) {\n  return unsafe\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\nconst codeExample =\n  escapeHtml(`// Valid braces Kata – https://www.codewars.com/kata/5277c8a221e209d3f6000b56\n\nconst pairs: Record<string, string> = {\n  '[': ']',\n  '{': '}',\n  '(': ')',\n};\n\nconst openBraces = Object.keys(pairs);\n\nexport function validBraces(braces: string) {\n  const opened: string[] = [];\n\n  for (let i = 0; i < braces.length; i += 1) {\n    const brace = braces[i];\n\n    if (openBraces.includes(brace)) {\n      opened.push(brace);\n      continue;\n    }\n\n    if (pairs[opened[opened.length - 1]] !== brace) {\n      return false\n    }\n\n    opened.pop();\n  }\n\n  return opened.length === 0;\n}`);\n\nfunction Demo() {\n  const editor = useEditor({\n    extensions: [\n      StarterKit,\n      CodeBlockLowlight.configure({\n        lowlight,\n      }),\n    ],\n    content: `<p>Regular paragraph</p><pre><code>${codeExample}</code></pre>`,\n  });\n\n  return (\n    <RichTextEditor editor={editor}>\n      <RichTextEditor.Toolbar>\n        <RichTextEditor.ControlsGroup>\n          <RichTextEditor.CodeBlock />\n        </RichTextEditor.ControlsGroup>\n      </RichTextEditor.Toolbar>\n\n      <RichTextEditor.Content />\n    </RichTextEditor>\n  );\n}\n\nexport const codeHighlight: MantineDemo = {\n  type: 'code',\n  component: Demo,\n  code,\n};\n"],"names":[],"mappings":";;;;;;;;AAOA,MAAM,IAAI,GAAG,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;AAClD,SAAS,UAAU,CAAC,MAAM,EAAE;AAC5B,EAAE,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACnI,CAAC;AACD,MAAM,WAAW,GAAG,UAAU,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC,CAAC,CAAC;AACJ,SAAS,IAAI,GAAG;AAChB,EAAE,MAAM,MAAM,GAAG,SAAS,CAAC;AAC3B,IAAI,UAAU,EAAE;AAChB,MAAM,UAAU;AAChB,MAAM,iBAAiB,CAAC,SAAS,CAAC;AAClC,QAAQ,QAAQ;AAChB,OAAO,CAAC;AACR,KAAK;AACL,IAAI,OAAO,EAAE,CAAC,mCAAmC,EAAE,WAAW,CAAC,aAAa,CAAC;AAC7E,GAAG,CAAC,CAAC;AACL,EAAE,uBAAuB,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,kBAAkB,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,kBAAkB,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,kBAAkB,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,kBAAkB,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAC7V,CAAC;AACW,MAAC,aAAa,GAAG;AAC7B,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,SAAS,EAAE,IAAI;AACjB,EAAE,IAAI;AACN;;;;"}
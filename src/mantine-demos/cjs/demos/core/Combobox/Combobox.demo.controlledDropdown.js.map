{"version":3,"file":"Combobox.demo.controlledDropdown.js","sources":["../../../../src/demos/core/Combobox/Combobox.demo.controlledDropdown.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { TextInput, Button, Combobox, useCombobox } from '@mantine/core';\n\nconst code = `\nimport { useState } from 'react';\nimport { TextInput, Button, Combobox, useCombobox } from '@mantine/core';\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const [opened, setOpened] = useState(false);\n  const combobox = useCombobox({ opened });\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      {item}\n    </Combobox.Option>\n  ));\n\n  return (\n    <>\n      <Button mb=\"md\" onClick={() => setOpened((o) => !o)}>\n        Toggle dropdown\n      </Button>\n\n      <Combobox store={combobox}>\n        <Combobox.Target>\n          <TextInput\n            label=\"Autocomplete\"\n            description=\"Dropdown is opened/closed when button is clicked\"\n            placeholder=\"Click button to toggle dropdown\"\n          />\n        </Combobox.Target>\n\n        <Combobox.Dropdown>\n          <Combobox.Options>{options}</Combobox.Options>\n        </Combobox.Dropdown>\n      </Combobox>\n    </>\n  );\n}\n`;\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const [opened, setOpened] = useState(false);\n  const combobox = useCombobox({ opened });\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      {item}\n    </Combobox.Option>\n  ));\n\n  return (\n    <>\n      <Button mb=\"md\" onClick={() => setOpened((o) => !o)}>\n        Toggle dropdown\n      </Button>\n\n      <Combobox store={combobox}>\n        <Combobox.Target>\n          <TextInput\n            label=\"Autocomplete\"\n            description=\"Dropdown is opened/closed when button is clicked\"\n            placeholder=\"Click button to toggle dropdown\"\n          />\n        </Combobox.Target>\n\n        <Combobox.Dropdown>\n          <Combobox.Options>{options}</Combobox.Options>\n        </Combobox.Dropdown>\n      </Combobox>\n    </>\n  );\n}\n\nexport const controlledDropdown: MantineDemo = {\n  type: 'code',\n  component: Demo,\n  code,\n  maxWidth: 340,\n  centered: true,\n  defaultExpanded: false,\n};\n"],"names":["useState","useCombobox","React","Combobox","Button","TextInput"],"mappings":";;;;;;;;;;;AAEA,MAAM,IAAI,GAAG,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACF,MAAM,SAAS,GAAG,CAAC,kBAAkB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,mBAAmB,EAAE,qBAAqB,CAAC,CAAC;AAC9H,SAAS,IAAI,GAAG;AAChB,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAGA,cAAQ,CAAC,KAAK,CAAC,CAAC;AAC9C,EAAE,MAAM,QAAQ,GAAGC,gBAAW,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3C,EAAE,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,qBAAqBC,cAAK,CAAC,aAAa,CAACC,aAAQ,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;AAClI,EAAE,uBAAuBD,cAAK,CAAC,aAAa,CAACA,cAAK,CAAC,QAAQ,EAAE,IAAI,kBAAkBA,cAAK,CAAC,aAAa,CAACE,WAAM,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,iBAAiB,CAAC,kBAAkBF,cAAK,CAAC,aAAa,CAACC,aAAQ,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,kBAAkBD,cAAK,CAAC,aAAa,CAACC,aAAQ,CAAC,MAAM,EAAE,IAAI,kBAAkBD,cAAK,CAAC,aAAa;AACvV,IAAIG,cAAS;AACb,IAAI;AACJ,MAAM,KAAK,EAAE,cAAc;AAC3B,MAAM,WAAW,EAAE,kDAAkD;AACrE,MAAM,WAAW,EAAE,iCAAiC;AACpD,KAAK;AACL,GAAG,CAAC,kBAAkBH,cAAK,CAAC,aAAa,CAACC,aAAQ,CAAC,QAAQ,EAAE,IAAI,kBAAkBD,cAAK,CAAC,aAAa,CAACC,aAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3I,CAAC;AACW,MAAC,kBAAkB,GAAG;AAClC,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,SAAS,EAAE,IAAI;AACjB,EAAE,IAAI;AACN,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,eAAe,EAAE,KAAK;AACxB;;;;"}
{"version":3,"file":"Combobox.demo.multiselect.js","sources":["../../../../src/demos/core/Combobox/Combobox.demo.multiselect.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MantineDemo } from '@mantine/ds';\nimport { PillsInput, Pill, Input, Combobox, CheckIcon, Group, useCombobox } from '@mantine/core';\n\nconst code = `\nimport { useState } from 'react';\nimport { PillsInput, Pill, Input, Combobox, CheckIcon, Group, useCombobox } from '@mantine/core';\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n    onDropdownOpen: () => combobox.updateSelectedOptionIndex('active'),\n  });\n\n  const [value, setValue] = useState<string[]>([]);\n\n  const handleValueSelect = (val: string) =>\n    setValue((current) =>\n      current.includes(val) ? current.filter((v) => v !== val) : [...current, val]\n    );\n\n  const handleValueRemove = (val: string) =>\n    setValue((current) => current.filter((v) => v !== val));\n\n  const values = value.map((item) => (\n    <Pill key={item} withRemoveButton onRemove={() => handleValueRemove(item)}>\n      {item}\n    </Pill>\n  ));\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item} active={value.includes(item)}>\n      <Group gap=\"sm\">\n        {value.includes(item) ? <CheckIcon size={12} /> : null}\n        <span>{item}</span>\n      </Group>\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox store={combobox} onOptionSubmit={handleValueSelect}>\n      <Combobox.DropdownTarget>\n        <PillsInput pointer onClick={() => combobox.toggleDropdown()}>\n          <Pill.Group>\n            {values.length > 0 ? (\n              values\n            ) : (\n              <Input.Placeholder>Pick one or more values</Input.Placeholder>\n            )}\n\n            <Combobox.EventsTarget>\n              <PillsInput.Field\n                type=\"hidden\"\n                onBlur={() => combobox.closeDropdown()}\n                onKeyDown={(event) => {\n                  if (event.key === 'Backspace') {\n                    event.preventDefault();\n                    handleValueRemove(value[value.length - 1]);\n                  }\n                }}\n              />\n            </Combobox.EventsTarget>\n          </Pill.Group>\n        </PillsInput>\n      </Combobox.DropdownTarget>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>{options}</Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n`;\n\nconst groceries = ['🍎 Apples', '🍌 Bananas', '🥦 Broccoli', '🥕 Carrots', '🍫 Chocolate'];\n\nfunction Demo() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n    onDropdownOpen: () => combobox.updateSelectedOptionIndex('active'),\n  });\n\n  const [value, setValue] = useState<string[]>([]);\n\n  const handleValueSelect = (val: string) =>\n    setValue((current) =>\n      current.includes(val) ? current.filter((v) => v !== val) : [...current, val]\n    );\n\n  const handleValueRemove = (val: string) =>\n    setValue((current) => current.filter((v) => v !== val));\n\n  const values = value.map((item) => (\n    <Pill key={item} withRemoveButton onRemove={() => handleValueRemove(item)}>\n      {item}\n    </Pill>\n  ));\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item} active={value.includes(item)}>\n      <Group gap=\"sm\">\n        {value.includes(item) ? <CheckIcon size={12} /> : null}\n        <span>{item}</span>\n      </Group>\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox store={combobox} onOptionSubmit={handleValueSelect}>\n      <Combobox.DropdownTarget>\n        <PillsInput pointer onClick={() => combobox.toggleDropdown()}>\n          <Pill.Group>\n            {values.length > 0 ? (\n              values\n            ) : (\n              <Input.Placeholder>Pick one or more values</Input.Placeholder>\n            )}\n\n            <Combobox.EventsTarget>\n              <PillsInput.Field\n                type=\"hidden\"\n                onBlur={() => combobox.closeDropdown()}\n                onKeyDown={(event) => {\n                  if (event.key === 'Backspace') {\n                    event.preventDefault();\n                    handleValueRemove(value[value.length - 1]);\n                  }\n                }}\n              />\n            </Combobox.EventsTarget>\n          </Pill.Group>\n        </PillsInput>\n      </Combobox.DropdownTarget>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>{options}</Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n\nexport const multiselect: MantineDemo = {\n  type: 'code',\n  component: Demo,\n  code,\n  centered: true,\n  defaultExpanded: false,\n  maxWidth: 340,\n};\n"],"names":["useCombobox","useState","React","Pill","Combobox","Group","CheckIcon","PillsInput","Input"],"mappings":"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"}
{"version":3,"file":"Table.demo.captions.js","sources":["../../../../src/demos/core/Table/Table.demo.captions.tsx"],"sourcesContent":["import React from 'react';\nimport { Table } from '@mantine/core';\nimport { MantineDemo } from '@mantine/ds';\nimport { elements } from './_data';\n\nconst code = `\nimport { Table } from '@mantine/core';\n\nfunction Demo() {\n  const rows = elements.map((element) => (\n    <Table.Tr key={element.name}>\n      <Table.Td>{element.position}</Table.Td>\n      <Table.Td>{element.name}</Table.Td>\n      <Table.Td>{element.symbol}</Table.Td>\n      <Table.Td>{element.mass}</Table.Td>\n    </Table.Tr>\n  ));\n\n  const ths = (\n    <Table.Tr>\n      <Table.Th>Element position</Table.Th>\n      <Table.Th>Element name</Table.Th>\n      <Table.Th>Symbol</Table.Th>\n      <Table.Th>Atomic mass</Table.Th>\n    </Table.Tr>\n  );\n\n  return (\n    <Table captionSide=\"bottom\">\n      <Table.Caption>Some elements from periodic table</Table.Caption>\n      <Table.Thead>{ths}</Table.Thead>\n      <Table.Tbody>{rows}</Table.Tbody>\n      <Table.Tfoot>{ths}</Table.Tfoot>\n    </Table>\n  );\n}\n`;\n\nexport function Demo() {\n  const rows = elements.map((element) => (\n    <Table.Tr key={element.name}>\n      <Table.Td>{element.position}</Table.Td>\n      <Table.Td>{element.name}</Table.Td>\n      <Table.Td>{element.symbol}</Table.Td>\n      <Table.Td>{element.mass}</Table.Td>\n    </Table.Tr>\n  ));\n\n  const ths = (\n    <Table.Tr>\n      <Table.Th>Element position</Table.Th>\n      <Table.Th>Element name</Table.Th>\n      <Table.Th>Symbol</Table.Th>\n      <Table.Th>Atomic mass</Table.Th>\n    </Table.Tr>\n  );\n\n  return (\n    <Table captionSide=\"bottom\">\n      <Table.Caption>Some elements from periodic table</Table.Caption>\n      <Table.Thead>{ths}</Table.Thead>\n      <Table.Tbody>{rows}</Table.Tbody>\n      <Table.Tfoot>{ths}</Table.Tfoot>\n    </Table>\n  );\n}\n\nexport const captions: MantineDemo = {\n  type: 'code',\n  code,\n  component: Demo,\n};\n"],"names":["elements","React","Table"],"mappings":";;;;;;;;;;;;AAGA,MAAM,IAAI,GAAG,CAAC;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC;AACK,SAAS,IAAI,GAAG;AACvB,EAAE,MAAM,IAAI,GAAGA,cAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,qBAAqBC,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,OAAO,CAAC,IAAI,EAAE,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjY,EAAE,MAAM,GAAG,mBAAmBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,kBAAkB,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,cAAc,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC;AACnV,EAAE,uBAAuBD,cAAK,CAAC,aAAa,CAACC,UAAK,EAAE,EAAE,WAAW,EAAE,QAAQ,EAAE,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,OAAO,EAAE,IAAI,EAAE,mCAAmC,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,kBAAkBD,cAAK,CAAC,aAAa,CAACC,UAAK,CAAC,KAAK,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;AACtW,CAAC;AACW,MAAC,QAAQ,GAAG;AACxB,EAAE,IAAI,EAAE,MAAM;AACd,EAAE,IAAI;AACN,EAAE,SAAS,EAAE,IAAI;AACjB;;;;;"}